# -----------------------------------------------------
# Dockerfile Template for OHDSI Stack
#
# Mount Maven Configuration XML file to /workspace/config.xml
# Mount Atlas(Web Client)'s Config JS file to /workspace/config.js
# Mount Achilles's Data Folder to /workspace/Data
# -----------------------------------------------------

# start from base
FROM @base

# install sed first.
RUN apt-get update && \
  DEBIAN_FRONTEND=noninteractive apt-get install -y sed

# change APT Repository to Korean Mirror.
# it'll be faster for fetch and download dependencies.
RUN cp /etc/apt/sources.list /etc/apt/sources.list.old; \
  sed -i 's/us.archive.ubuntu.com/mirror.kakao.com/g' /etc/apt/sources.list; \
  sed -i 's/kr.archive.ubuntu.com/mirror.kakao.com/g' /etc/apt/sources.list; \ 
  sed -i 's/archive.ubuntu.com/mirror.kakao.com/g' /etc/apt/sources.list

# Install every base dependencies
RUN apt-get update && \
  DEBIAN_FRONTEND=noninteractive apt-get install -y build-essential vim \
  maven wget openjdk-8-jdk tomcat7 zip unzip
RUN service tomcat7 stop

# Create Working Directory
RUN mkdir /workspace; mkdir /workspace/AtlasProfile; mkdir /workspace/bin
WORKDIR /workspace

# Set JAVA_HOME environment variable
ENV JAVA_HOME /usr/lib/jvm/java-8-openjdk-amd64

# Patch Tomcat7 context file.
RUN rm -rf /var/lib/tomcat7/conf/context.xml
COPY context.xml /var/lib/tomcat7/conf/context.xml

# Download Sources
RUN wget -O Achilles.zip https://github.com/OHDSI/AchillesWeb/archive/master.zip && \
  wget -O WebAPI.zip https://github.com/OHDSI/WebAPI/archive/v@webAPIVer.zip && \
  wget -O Atlas.zip https://github.com/OHDSI/Atlas/archive/v@atlasVer.zip

# Unzip Source and Change it.
RUN unzip Achilles.zip; mv AchillesWeb-master Achilles; rm -rf Achilles.zip && \
  unzip WebAPI.zip; mv WebAPI-@webAPIVer WebAPI; rm -rf WebAPI.zip && \
  unzip Atlas.zip; mv Atlas-@atlasVer Atlas; rm -rf Atlas.zip

# Apply Config, Linking, Patching Configuration of Atlas, ...
RUN ln -s /workspace/Atlas /var/lib/tomcat7/webapps/Atlas && \
  ln -s /workspace/Achilles /var/lib/tomcat7/webapps/Achilles
RUN mkdir /workspace/Data && \
  ln -s /workspace/Data /var/lib/tomcat7/webapps/Achilles/data && \
  rm -rf /workspace/Data

# Apply Atlas Config
COPY @configFile /workspace/config.js
RUN rm -rf /workspace/Atlas/@configPath; ln -s /workspace/config.js /workspace/Atlas/@configPath

# Apply WebAPI Patch
RUN rm -rf /workspace/WebAPI/src/main/java/org/ohdsi/webapi/service/CDMResultsService.java
COPY @patchFile /workspace/WebAPI/src/main/java/org/ohdsi/webapi/service/CDMResultsService.java
RUN rm -rf /workspace/WebAPI/src/main/resources/resources/vocabulary/sql/search.sql
COPY search.sql /workspace/WebAPI/src/main/resources/resources/vocabulary/sql/search.sql

# Copy Build Script
COPY install /workspace/bin/install
COPY tomcat-start /workspace/bin/tomcat-start
COPY tomcat-stop /workspace/bin/tomcat-stop
COPY setenv.sh /usr/share/tomcat7/bin
RUN chmod a+x /workspace/bin/install

# Make Error if install file doesn't copied.
RUN cat /workspace/bin/install
ENV PATH=$PATH:/workspace/bin

# Make Maven Offline.
RUN cd /workspace/WebAPI && mvn dependency:resolve && mvn dependency:go-offline

CMD ["/bin/bash"]
